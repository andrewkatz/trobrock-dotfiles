#!/usr/bin/env bash

set -e

if [ "$(uname)" = "Linux" ]; then
	if [ -z "$(command -v yay)" ]; then
		echo "yay not found, installing..."
		sudo pacman -S --noconfirm --needed git base-devel
		git clone https://aur.archlinux.org/yay.git /tmp/yay
		pushd /tmp/yay
		makepkg -si
		popd
		rm -rf /tmp/yay
	fi

	if [ -z "$(command stow)" ]; then
		echo "stow not found, installing..."
		yay -S --noconfirm stow
	fi 

	if [ "$SHELL" != "/usr/bin/zsh" ]; then
		echo "zsh not found, installing..."
		yay -S --noconfirm zsh
		chsh -s /usr/bin/zsh
		echo "logout and login required to change shell. Please logout and run this again."
		exit
	fi
fi

if [ ! -d "$HOME/.config/tmux/plugins" ] ; then
  git clone https://github.com/tmux-plugins/tpm $HOME/.config/tmux/plugins/tpm
fi

if [ ! -d "$HOME/.config/goose" ] ; then
  mkdir -p $HOME/.config/goose
fi

stow --verbose=2 --dotfiles --adopt -t $HOME .

if [ "$(uname)" = "Darwin" ]; then
  brew bundle
elif [ "$(uname)" = "Linux" ]; then
  packages="$(grep -v '^#' Archfile | tr '\n' ' ')"
  yay -S --needed --noconfirm $packages

  if [ ! -f $HOME/.config/1Password/settings/settings.json ] ; then
    echo "enabling h/w acceleration for 1password..."
    mkdir -p $HOME/.config/1Password/settings
    cat > $HOME/.config/1Password/settings/settings.json <<JSON
{
  "version": 1,
  "app.useHardwareAcceleration": true,
  "app.theme": "dark",
  "browsers.extension.enabled": true
}
JSON
  fi
fi

echo "Populating secrets.zsh from 1password..."
if [ -z "$(command -v op)" ]; then
  echo "1Password CLI not found"
else
  if [ -f $HOME/.zsh_secrets ]; then
    mv $HOME/.zsh_secrets $HOME/.zsh_secrets.bak
    rm -f $HOME/.zsh_secrets
  fi

  if [ ! -f .machine_name ]; then
    # get the list of available sec"tions from the item
    sections=$(op item get "ZSH Secrets" --format json | jq -r '.sections[].label')
    # have the user select one
    echo "Available sections:"
    select section in $sections; do
      if [ -n "$section" ]; then
        echo "Selected section: $section"
        break
      else
        echo "Invalid selection, please try again."
      fi
    done
    echo $section > .machine_name
  else
    section="$(cat .machine_name)"
  fi

  # grab all the secrets from that section and write them to the file
  op item get "ZSH Secrets" --format json | jq -r ".fields[] | select(.section.label == \"$section\") | \"\(.label) \(.value)\"" | while read -r line; do
    label=$(echo "$line" | cut -d' ' -f1)
    value=$(echo "$line" | cut -d' ' -f2-)
    echo "export $label=\"$value\"" >> $HOME/.zsh_secrets
  done
fi
